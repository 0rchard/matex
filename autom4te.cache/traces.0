m4trace:/usr/share/aclocal-1.11/amversion.m4:17: -1- AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version='1.11'
dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to
dnl require some minimum version.  Point them to the right macro.
m4_if([$1], [1.11.3], [],
      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl
])
m4trace:/usr/share/aclocal-1.11/amversion.m4:36: -1- AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION], [AM_AUTOMAKE_VERSION([1.11.3])dnl
m4_ifndef([AC_AUTOCONF_VERSION],
  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])
m4trace:/usr/share/aclocal-1.11/auxdir.m4:49: -1- AC_DEFUN([AM_AUX_DIR_EXPAND], [dnl Rely on autoconf to set up CDPATH properly.
AC_PREREQ([2.50])dnl
# expand $ac_aux_dir to an absolute path
am_aux_dir=`cd $ac_aux_dir && pwd`
])
m4trace:/usr/share/aclocal-1.11/cond.m4:15: -1- AC_DEFUN([AM_CONDITIONAL], [AC_PREREQ(2.52)dnl
 ifelse([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],
	[$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl
AC_SUBST([$1_TRUE])dnl
AC_SUBST([$1_FALSE])dnl
_AM_SUBST_NOTMAKE([$1_TRUE])dnl
_AM_SUBST_NOTMAKE([$1_FALSE])dnl
m4_define([_AM_COND_VALUE_$1], [$2])dnl
if $2; then
  $1_TRUE=
  $1_FALSE='#'
else
  $1_TRUE='#'
  $1_FALSE=
fi
AC_CONFIG_COMMANDS_PRE(
[if test -z "${$1_TRUE}" && test -z "${$1_FALSE}"; then
  AC_MSG_ERROR([[conditional "$1" was never defined.
Usually this means the macro was only invoked conditionally.]])
fi])])
m4trace:/usr/share/aclocal-1.11/depend.m4:28: -1- AC_DEFUN([_AM_DEPENDENCIES], [AC_REQUIRE([AM_SET_DEPDIR])dnl
AC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl
AC_REQUIRE([AM_MAKE_INCLUDE])dnl
AC_REQUIRE([AM_DEP_TRACK])dnl

ifelse([$1], CC,   [depcc="$CC"   am_compiler_list=],
       [$1], CXX,  [depcc="$CXX"  am_compiler_list=],
       [$1], OBJC, [depcc="$OBJC" am_compiler_list='gcc3 gcc'],
       [$1], UPC,  [depcc="$UPC"  am_compiler_list=],
       [$1], GCJ,  [depcc="$GCJ"  am_compiler_list='gcc3 gcc'],
                   [depcc="$$1"   am_compiler_list=])

AC_CACHE_CHECK([dependency style of $depcc],
               [am_cv_$1_dependencies_compiler_type],
[if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
  # We make a subdir and do the tests there.  Otherwise we can end up
  # making bogus files that we don't know about and never remove.  For
  # instance it was reported that on HP-UX the gcc test will end up
  # making a dummy file named `D' -- because `-MD' means `put the output
  # in D'.
  rm -rf conftest.dir
  mkdir conftest.dir
  # Copy depcomp to subdir because otherwise we won't find it if we're
  # using a relative directory.
  cp "$am_depcomp" conftest.dir
  cd conftest.dir
  # We will build objects and dependencies in a subdirectory because
  # it helps to detect inapplicable dependency modes.  For instance
  # both Tru64's cc and ICC support -MD to output dependencies as a
  # side effect of compilation, but ICC will put the dependencies in
  # the current directory while Tru64 will put them in the object
  # directory.
  mkdir sub

  am_cv_$1_dependencies_compiler_type=none
  if test "$am_compiler_list" = ""; then
     am_compiler_list=`sed -n ['s/^#*\([a-zA-Z0-9]*\))$/\1/p'] < ./depcomp`
  fi
  am__universal=false
  m4_case([$1], [CC],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac],
    [CXX],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac])

  for depmode in $am_compiler_list; do
    # Setup a source with many dependencies, because some compilers
    # like to wrap large dependency lists on column 80 (with \), and
    # we should not choose a depcomp mode which is confused by this.
    #
    # We need to recreate these files for each test, as the compiler may
    # overwrite some of them when testing with obscure command lines.
    # This happens at least with the AIX C compiler.
    : > sub/conftest.c
    for i in 1 2 3 4 5 6; do
      echo '#include "conftst'$i'.h"' >> sub/conftest.c
      # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
      # Solaris 8's {/usr,}/bin/sh.
      touch sub/conftst$i.h
    done
    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf

    # We check with `-c' and `-o' for the sake of the "dashmstdout"
    # mode.  It turns out that the SunPro C++ compiler does not properly
    # handle `-M -o', and we need to detect this.  Also, some Intel
    # versions had trouble with output in subdirs
    am__obj=sub/conftest.${OBJEXT-o}
    am__minus_obj="-o $am__obj"
    case $depmode in
    gcc)
      # This depmode causes a compiler race in universal mode.
      test "$am__universal" = false || continue
      ;;
    nosideeffect)
      # after this tag, mechanisms are not by side-effect, so they'll
      # only be used when explicitly requested
      if test "x$enable_dependency_tracking" = xyes; then
	continue
      else
	break
      fi
      ;;
    msvc7 | msvc7msys | msvisualcpp | msvcmsys)
      # This compiler won't grok `-c -o', but also, the minuso test has
      # not run yet.  These depmodes are late enough in the game, and
      # so weak that their functioning should not be impacted.
      am__obj=conftest.${OBJEXT-o}
      am__minus_obj=
      ;;
    none) break ;;
    esac
    if depmode=$depmode \
       source=sub/conftest.c object=$am__obj \
       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
         >/dev/null 2>conftest.err &&
       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
      # icc doesn't choke on unknown options, it will just issue warnings
      # or remarks (even with -Werror).  So we grep stderr for any message
      # that says an option was ignored or not supported.
      # When given -MP, icc 7.0 and 7.1 complain thusly:
      #   icc: Command line warning: ignoring option '-M'; no argument required
      # The diagnosis changed in icc 8.0:
      #   icc: Command line remark: option '-MP' not supported
      if (grep 'ignoring option' conftest.err ||
          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
        am_cv_$1_dependencies_compiler_type=$depmode
        break
      fi
    fi
  done

  cd ..
  rm -rf conftest.dir
else
  am_cv_$1_dependencies_compiler_type=none
fi
])
AC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])
AM_CONDITIONAL([am__fastdep$1], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_$1_dependencies_compiler_type" = gcc3])
])
m4trace:/usr/share/aclocal-1.11/depend.m4:164: -1- AC_DEFUN([AM_SET_DEPDIR], [AC_REQUIRE([AM_SET_LEADING_DOT])dnl
AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])dnl
])
m4trace:/usr/share/aclocal-1.11/depend.m4:172: -1- AC_DEFUN([AM_DEP_TRACK], [AC_ARG_ENABLE(dependency-tracking,
[  --disable-dependency-tracking  speeds up one-time build
  --enable-dependency-tracking   do not reject slow dependency extractors])
if test "x$enable_dependency_tracking" != xno; then
  am_depcomp="$ac_aux_dir/depcomp"
  AMDEPBACKSLASH='\'
  am__nodep='_no'
fi
AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
AC_SUBST([AMDEPBACKSLASH])dnl
_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl
AC_SUBST([am__nodep])dnl
_AM_SUBST_NOTMAKE([am__nodep])dnl
])
m4trace:/usr/share/aclocal-1.11/depout.m4:14: -1- AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS], [{
  # Autoconf 2.62 quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  case $CONFIG_FILES in
  *\'*) eval set x "$CONFIG_FILES" ;;
  *)   set x $CONFIG_FILES ;;
  esac
  shift
  for mf
  do
    # Strip MF so we end up with the name of the file.
    mf=`echo "$mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile or not.
    # We used to match only the files named `Makefile.in', but
    # some people rename them; so instead we look at the file content.
    # Grep'ing the first line is not enough: some people post-process
    # each Makefile.in and add a new line on top of each file to say so.
    # Grep'ing the whole file is not good either: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
      dirpart=`AS_DIRNAME("$mf")`
    else
      continue
    fi
    # Extract the definition of DEPDIR, am__include, and am__quote
    # from the Makefile without running `make'.
    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
    test -z "$DEPDIR" && continue
    am__include=`sed -n 's/^am__include = //p' < "$mf"`
    test -z "am__include" && continue
    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
    # When using ansi2knr, U may be empty or an underscore; expand it
    U=`sed -n 's/^U = //p' < "$mf"`
    # Find all dependency output files, they are included files with
    # $(DEPDIR) in their names.  We invoke sed twice because it is the
    # simplest approach to changing $(DEPDIR) to its actual value in the
    # expansion.
    for file in `sed -n "
      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
      # Make sure the directory exists.
      test -f "$dirpart/$file" && continue
      fdir=`AS_DIRNAME(["$file"])`
      AS_MKDIR_P([$dirpart/$fdir])
      # echo "creating $dirpart/$file"
      echo '# dummy' > "$dirpart/$file"
    done
  done
}
])
m4trace:/usr/share/aclocal-1.11/depout.m4:75: -1- AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS], [AC_CONFIG_COMMANDS([depfiles],
     [test x"$AMDEP_TRUE" != x"" || _AM_OUTPUT_DEPENDENCY_COMMANDS],
     [AMDEP_TRUE="$AMDEP_TRUE" ac_aux_dir="$ac_aux_dir"])
])
m4trace:/usr/share/aclocal-1.11/init.m4:26: -1- AC_DEFUN([AM_INIT_AUTOMAKE], [AC_PREREQ([2.62])dnl
dnl Autoconf wants to disallow AM_ names.  We explicitly allow
dnl the ones we care about.
m4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl
AC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl
AC_REQUIRE([AC_PROG_INSTALL])dnl
if test "`cd $srcdir && pwd`" != "`pwd`"; then
  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
  # is not polluted with repeated "-I."
  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl
  # test to see if srcdir already configured
  if test -f $srcdir/config.status; then
    AC_MSG_ERROR([source directory already configured; run "make distclean" there first])
  fi
fi

# test whether we have cygpath
if test -z "$CYGPATH_W"; then
  if (cygpath --version) >/dev/null 2>/dev/null; then
    CYGPATH_W='cygpath -w'
  else
    CYGPATH_W=echo
  fi
fi
AC_SUBST([CYGPATH_W])

# Define the identity of the package.
dnl Distinguish between old-style and new-style calls.
m4_ifval([$2],
[m4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl
 AC_SUBST([PACKAGE], [$1])dnl
 AC_SUBST([VERSION], [$2])],
[_AM_SET_OPTIONS([$1])dnl
dnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.
m4_if(m4_ifdef([AC_PACKAGE_NAME], 1)m4_ifdef([AC_PACKAGE_VERSION], 1), 11,,
  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl
 AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl
 AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl

_AM_IF_OPTION([no-define],,
[AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE", [Name of package])
 AC_DEFINE_UNQUOTED(VERSION, "$VERSION", [Version number of package])])dnl

# Some tools Automake needs.
AC_REQUIRE([AM_SANITY_CHECK])dnl
AC_REQUIRE([AC_ARG_PROGRAM])dnl
AM_MISSING_PROG(ACLOCAL, aclocal-${am__api_version})
AM_MISSING_PROG(AUTOCONF, autoconf)
AM_MISSING_PROG(AUTOMAKE, automake-${am__api_version})
AM_MISSING_PROG(AUTOHEADER, autoheader)
AM_MISSING_PROG(MAKEINFO, makeinfo)
AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
AC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl
AC_REQUIRE([AM_PROG_MKDIR_P])dnl
# We need awk for the "check" target.  The system "awk" is bad on
# some platforms.
AC_REQUIRE([AC_PROG_AWK])dnl
AC_REQUIRE([AC_PROG_MAKE_SET])dnl
AC_REQUIRE([AM_SET_LEADING_DOT])dnl
_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],
	      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
_AM_IF_OPTION([no-dependencies],,
[AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES(CC)],
		  [define([AC_PROG_CC],
			  defn([AC_PROG_CC])[_AM_DEPENDENCIES(CC)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES(CXX)],
		  [define([AC_PROG_CXX],
			  defn([AC_PROG_CXX])[_AM_DEPENDENCIES(CXX)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES(OBJC)],
		  [define([AC_PROG_OBJC],
			  defn([AC_PROG_OBJC])[_AM_DEPENDENCIES(OBJC)])])dnl
])
_AM_IF_OPTION([silent-rules], [AC_REQUIRE([AM_SILENT_RULES])])dnl
dnl The `parallel-tests' driver may need to know about EXEEXT, so add the
dnl `am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This macro
dnl is hooked onto _AC_COMPILER_EXEEXT early, see below.
AC_CONFIG_COMMANDS_PRE(dnl
[m4_provide_if([_AM_COMPILER_EXEEXT],
  [AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])])])dnl
])
m4trace:/usr/share/aclocal-1.11/init.m4:126: -1- AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK], [# Compute $1's index in $config_headers.
_am_arg=$1
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`AS_DIRNAME(["$_am_arg"])`/stamp-h[]$_am_stamp_count])
m4trace:/usr/share/aclocal-1.11/install-sh.m4:14: -1- AC_DEFUN([AM_PROG_INSTALL_SH], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
if test x"${install_sh}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
  *)
    install_sh="\${SHELL} $am_aux_dir/install-sh"
  esac
fi
AC_SUBST(install_sh)])
m4trace:/usr/share/aclocal-1.11/lead-dot.m4:12: -1- AC_DEFUN([AM_SET_LEADING_DOT], [rm -rf .tst 2>/dev/null
mkdir .tst 2>/dev/null
if test -d .tst; then
  am__leading_dot=.
else
  am__leading_dot=_
fi
rmdir .tst 2>/dev/null
AC_SUBST([am__leading_dot])])
m4trace:/usr/share/aclocal-1.11/make.m4:14: -1- AC_DEFUN([AM_MAKE_INCLUDE], [am_make=${MAKE-make}
cat > confinc << 'END'
am__doit:
	@echo this is the am__doit target
.PHONY: am__doit
END
# If we don't find an include directive, just comment out the code.
AC_MSG_CHECKING([for style of include used by $am_make])
am__include="#"
am__quote=
_am_result=none
# First try GNU make style include.
echo "include confinc" > confmf
# Ignore all kinds of additional output from `make'.
case `$am_make -s -f confmf 2> /dev/null` in #(
*the\ am__doit\ target*)
  am__include=include
  am__quote=
  _am_result=GNU
  ;;
esac
# Now try BSD make style include.
if test "$am__include" = "#"; then
   echo '.include "confinc"' > confmf
   case `$am_make -s -f confmf 2> /dev/null` in #(
   *the\ am__doit\ target*)
     am__include=.include
     am__quote="\""
     _am_result=BSD
     ;;
   esac
fi
AC_SUBST([am__include])
AC_SUBST([am__quote])
AC_MSG_RESULT([$_am_result])
rm -f confinc confmf
])
m4trace:/usr/share/aclocal-1.11/missing.m4:14: -1- AC_DEFUN([AM_MISSING_PROG], [AC_REQUIRE([AM_MISSING_HAS_RUN])
$1=${$1-"${am_missing_run}$2"}
AC_SUBST($1)])
m4trace:/usr/share/aclocal-1.11/missing.m4:24: -1- AC_DEFUN([AM_MISSING_HAS_RUN], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([missing])dnl
if test x"${MISSING+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    MISSING="\${SHELL} \"$am_aux_dir/missing\"" ;;
  *)
    MISSING="\${SHELL} $am_aux_dir/missing" ;;
  esac
fi
# Use eval to expand $SHELL
if eval "$MISSING --run true"; then
  am_missing_run="$MISSING --run "
else
  am_missing_run=
  AC_MSG_WARN([`missing' script is too old or missing])
fi
])
m4trace:/usr/share/aclocal-1.11/mkdirp.m4:14: -1- AC_DEFUN([AM_PROG_MKDIR_P], [AC_PREREQ([2.60])dnl
AC_REQUIRE([AC_PROG_MKDIR_P])dnl
dnl Automake 1.8 to 1.9.6 used to define mkdir_p.  We now use MKDIR_P,
dnl while keeping a definition of mkdir_p for backward compatibility.
dnl @MKDIR_P@ is magic: AC_OUTPUT adjusts its value for each Makefile.
dnl However we cannot define mkdir_p as $(MKDIR_P) for the sake of
dnl Makefile.ins that do not define MKDIR_P, so we do our own
dnl adjustment using top_builddir (which is defined more often than
dnl MKDIR_P).
AC_SUBST([mkdir_p], ["$MKDIR_P"])dnl
case $mkdir_p in
  [[\\/$]]* | ?:[[\\/]]*) ;;
  */*) mkdir_p="\$(top_builddir)/$mkdir_p" ;;
esac
])
m4trace:/usr/share/aclocal-1.11/options.m4:14: -1- AC_DEFUN([_AM_MANGLE_OPTION], [[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])
m4trace:/usr/share/aclocal-1.11/options.m4:20: -1- AC_DEFUN([_AM_SET_OPTION], [m4_define(_AM_MANGLE_OPTION([$1]), 1)])
m4trace:/usr/share/aclocal-1.11/options.m4:26: -1- AC_DEFUN([_AM_SET_OPTIONS], [m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])
m4trace:/usr/share/aclocal-1.11/options.m4:32: -1- AC_DEFUN([_AM_IF_OPTION], [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
m4trace:/usr/share/aclocal-1.11/runlog.m4:14: -1- AC_DEFUN([AM_RUN_LOG], [{ echo "$as_me:$LINENO: $1" >&AS_MESSAGE_LOG_FD
   ($1) >&AS_MESSAGE_LOG_FD 2>&AS_MESSAGE_LOG_FD
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   (exit $ac_status); }])
m4trace:/usr/share/aclocal-1.11/sanity.m4:14: -1- AC_DEFUN([AM_SANITY_CHECK], [AC_MSG_CHECKING([whether build environment is sane])
# Just in case
sleep 1
echo timestamp > conftest.file
# Reject unsafe characters in $srcdir or the absolute working directory
# name.  Accept space and tab only in the latter.
am_lf='
'
case `pwd` in
  *[[\\\"\#\$\&\'\`$am_lf]]*)
    AC_MSG_ERROR([unsafe absolute working directory name]);;
esac
case $srcdir in
  *[[\\\"\#\$\&\'\`$am_lf\ \	]]*)
    AC_MSG_ERROR([unsafe srcdir value: `$srcdir']);;
esac

# Do `set' in a subshell so we don't clobber the current shell's
# arguments.  Must try -L first in case configure is actually a
# symlink; some systems play weird games with the mod time of symlinks
# (eg FreeBSD returns the mod time of the symlink's containing
# directory).
if (
   set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
   if test "$[*]" = "X"; then
      # -L didn't work.
      set X `ls -t "$srcdir/configure" conftest.file`
   fi
   rm -f conftest.file
   if test "$[*]" != "X $srcdir/configure conftest.file" \
      && test "$[*]" != "X conftest.file $srcdir/configure"; then

      # If neither matched, then we have a broken ls.  This can happen
      # if, for instance, CONFIG_SHELL is bash and it inherits a
      # broken ls alias from the environment.  This has actually
      # happened.  Such a system could not be considered "sane".
      AC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken
alias in your environment])
   fi

   test "$[2]" = conftest.file
   )
then
   # Ok.
   :
else
   AC_MSG_ERROR([newly created file is older than distributed files!
Check your system clock])
fi
AC_MSG_RESULT(yes)])
m4trace:/usr/share/aclocal-1.11/silent.m4:14: -1- AC_DEFUN([AM_SILENT_RULES], [AC_ARG_ENABLE([silent-rules],
[  --enable-silent-rules          less verbose build output (undo: `make V=1')
  --disable-silent-rules         verbose build output (undo: `make V=0')])
case $enable_silent_rules in
yes) AM_DEFAULT_VERBOSITY=0;;
no)  AM_DEFAULT_VERBOSITY=1;;
*)   AM_DEFAULT_VERBOSITY=m4_if([$1], [yes], [0], [1]);;
esac
dnl
dnl A few `make' implementations (e.g., NonStop OS and NextStep)
dnl do not support nested variable expansions.
dnl See automake bug#9928 and bug#10237.
am_make=${MAKE-make}
AC_CACHE_CHECK([whether $am_make supports nested variables],
   [am_cv_make_support_nested_variables],
   [if AS_ECHO([['TRUE=$(BAR$(V))
BAR0=false
BAR1=true
V=1
am__doit:
	@$(TRUE)
.PHONY: am__doit']]) | $am_make -f - >/dev/null 2>&1; then
  am_cv_make_support_nested_variables=yes
else
  am_cv_make_support_nested_variables=no
fi])
if test $am_cv_make_support_nested_variables = yes; then
  dnl Using `$V' instead of `$(V)' breaks IRIX make.
  AM_V='$(V)'
  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
else
  AM_V=$AM_DEFAULT_VERBOSITY
  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY
fi
AC_SUBST([AM_V])dnl
AM_SUBST_NOTMAKE([AM_V])dnl
AC_SUBST([AM_DEFAULT_V])dnl
AM_SUBST_NOTMAKE([AM_DEFAULT_V])dnl
AC_SUBST([AM_DEFAULT_VERBOSITY])dnl
AM_BACKSLASH='\'
AC_SUBST([AM_BACKSLASH])dnl
_AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl
])
m4trace:/usr/share/aclocal-1.11/strip.m4:19: -1- AC_DEFUN([AM_PROG_INSTALL_STRIP], [AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
# Installed binaries are usually stripped using `strip' when the user
# run `make install-strip'.  However `strip' might not be the right
# tool to use in cross-compilation environments, therefore Automake
# will honor the `STRIP' environment variable to overrule this program.
dnl Don't test for $cross_compiling = yes, because it might be `maybe'.
if test "$cross_compiling" != no; then
  AC_CHECK_TOOL([STRIP], [strip], :)
fi
INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
AC_SUBST([INSTALL_STRIP_PROGRAM])])
m4trace:/usr/share/aclocal-1.11/substnot.m4:14: -1- AC_DEFUN([_AM_SUBST_NOTMAKE])
m4trace:/usr/share/aclocal-1.11/substnot.m4:19: -1- AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])
m4trace:/usr/share/aclocal-1.11/tar.m4:24: -1- AC_DEFUN([_AM_PROG_TAR], [# Always define AMTAR for backward compatibility.  Yes, it's still used
# in the wild :-(  We should find a proper way to deprecate it ...
AC_SUBST([AMTAR], ['$${TAR-tar}'])
m4_if([$1], [v7],
     [am__tar='$${TAR-tar} chof - "$$tardir"' am__untar='$${TAR-tar} xf -'],
     [m4_case([$1], [ustar],, [pax],,
              [m4_fatal([Unknown tar format])])
AC_MSG_CHECKING([how to create a $1 tar archive])
# Loop over all known methods to create a tar archive until one works.
_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'
_am_tools=${am_cv_prog_tar_$1-$_am_tools}
# Do not fold the above two line into one, because Tru64 sh and
# Solaris sh will not grok spaces in the rhs of `-'.
for _am_tool in $_am_tools
do
  case $_am_tool in
  gnutar)
    for _am_tar in tar gnutar gtar;
    do
      AM_RUN_LOG([$_am_tar --version]) && break
    done
    am__tar="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$$tardir"'
    am__tar_="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$tardir"'
    am__untar="$_am_tar -xf -"
    ;;
  plaintar)
    # Must skip GNU tar: if it does not support --format= it doesn't create
    # ustar tarball either.
    (tar --version) >/dev/null 2>&1 && continue
    am__tar='tar chf - "$$tardir"'
    am__tar_='tar chf - "$tardir"'
    am__untar='tar xf -'
    ;;
  pax)
    am__tar='pax -L -x $1 -w "$$tardir"'
    am__tar_='pax -L -x $1 -w "$tardir"'
    am__untar='pax -r'
    ;;
  cpio)
    am__tar='find "$$tardir" -print | cpio -o -H $1 -L'
    am__tar_='find "$tardir" -print | cpio -o -H $1 -L'
    am__untar='cpio -i -H $1 -d'
    ;;
  none)
    am__tar=false
    am__tar_=false
    am__untar=false
    ;;
  esac

  # If the value was cached, stop now.  We just wanted to have am__tar
  # and am__untar set.
  test -n "${am_cv_prog_tar_$1}" && break

  # tar/untar a dummy directory, and stop if the command works
  rm -rf conftest.dir
  mkdir conftest.dir
  echo GrepMe > conftest.dir/file
  AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
  rm -rf conftest.dir
  if test -s conftest.tar; then
    AM_RUN_LOG([$am__untar <conftest.tar])
    grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
  fi
done
rm -rf conftest.dir

AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])
AC_MSG_RESULT([$am_cv_prog_tar_$1])])
AC_SUBST([am__tar])
AC_SUBST([am__untar])
])
m4trace:m4/matex_arg_parse.m4:15: -1- AC_DEFUN([MATEX_ARG_PARSE], [
for arg in $$1 ; do
    matex_arg_parse_ok=yes
    AS_CASE([$arg],
        [yes],          [],
        [no],           [],
        [-l*],          [$2="$$2 $arg"],
        [-L*],          [$3="$$3 $arg"],
        [-WL*],         [$3="$$3 $arg"],
        [-Wl*],         [$3="$$3 $arg"],
        [-I*],          [$4="$$4 $arg"],
        [*.a],          [$2="$$2 $arg"],
        [*.so],         [$2="$$2 $arg"],
        [*lib],         [AS_IF([test -d $arg], [$3="$$3 -L$arg"],
                            [AC_MSG_WARN([$arg of $1 not parsed])])],
        [*lib/],        [AS_IF([test -d $arg], [$3="$$3 -L$arg"],
                            [AC_MSG_WARN([$arg of $1 not parsed])])],
        [*lib64],       [AS_IF([test -d $arg], [$3="$$3 -L$arg"],
                            [AC_MSG_WARN([$arg of $1 not parsed])])],
        [*lib64/],      [AS_IF([test -d $arg], [$3="$$3 -L$arg"],
                            [AC_MSG_WARN([$arg of $1 not parsed])])],
        [*include],     [AS_IF([test -d $arg], [$4="$$4 -I$arg"],
                            [AC_MSG_WARN([$arg of $1 not parsed])])],
        [*include/],    [AS_IF([test -d $arg], [$4="$$4 -I$arg"],
                            [AC_MSG_WARN([$arg of $1 not parsed])])],
        [*include64],   [AS_IF([test -d $arg], [$4="$$4 -I$arg"],
                            [AC_MSG_WARN([$arg of $1 not parsed])])],
        [*include64/],  [AS_IF([test -d $arg], [$4="$$4 -I$arg"],
                            [AC_MSG_WARN([$arg of $1 not parsed])])],
        [-mkl*],        [$2="$$2 $arg"],
        [matex_arg_parse_ok=no])
# $arg unknown, look for "lib" and "include" anywhere...
    AS_IF([test "x$matex_arg_parse_ok" = xno],
        [AS_CASE([$arg],
            [*lib*],    [AS_IF([test -d $arg], [$3="$$3 -L$arg"; matex_arg_parse_ok=yes])],
            [*include*],[AS_IF([test -d $arg], [$4="$$4 -I$arg"; matex_arg_parse_ok=yes])])])
# warn user that $arg fell through
     AS_IF([test "x$matex_arg_parse_ok" = xno],
        [AC_MSG_WARN([$arg of $1 not parsed])])
done])
m4trace:m4/matex_blas.m4:4: -1- AC_DEFUN([MATEX_F77_BLAS_TEST], [AC_LANG_CONFTEST([AC_LANG_PROGRAM([],
[[      implicit none
      INTEGER M, N, K, LDA, LDB, LDC
      COMPLEX CA(20,40), CB(20,30), CC(40,30), Calpha, Cbeta
      DOUBLE COMPLEX ZA(20,40), ZB(20,30), ZC(40,30), Zalpha, Zbeta
      REAL SA(20,40), SB(20,30), SC(40,30), Salpha, Sbeta
      DOUBLE PRECISION DA(20,40), DB(20,30), DC(40,30), Dalpha, Dbeta
      external CGEMM
      external ZGEMM
      external SGEMM
      external DGEMM
      M = 10
      N = 20
      K = 15
      LDA = 20
      LDB = 20
      LDC = 40
      Calpha = 2.0
      Cbeta = 2.0
      Zalpha = 2.0
      Zbeta = 2.0
      Salpha = 2.0
      Sbeta = 2.0
      Dalpha = 2.0
      Dbeta = 2.0
      CALL CGEMM ('T','N',M,N,K,Calpha,CA,LDA,CB,LDB,Cbeta,CC,LDC)
      CALL ZGEMM ('T','N',M,N,K,Zalpha,ZA,LDA,ZB,LDB,Zbeta,ZC,LDC)
      CALL SGEMM ('T','N',M,N,K,Salpha,SA,LDA,SB,LDB,Sbeta,SC,LDC)
      CALL DGEMM ('T','N',M,N,K,Dalpha,DA,LDA,DB,LDB,Dbeta,DC,LDC)]])])
])
m4trace:m4/matex_blas.m4:38: -1- AC_DEFUN([MATEX_C_BLAS_TEST], [AC_LANG_CONFTEST([AC_LANG_PROGRAM(
[#ifdef __cplusplus
extern "C" {
#endif
char cgemm ();
char dgemm ();
char sgemm ();
char zgemm ();
#ifdef __cplusplus
}
#endif
],
[[char cresult =  cgemm ();
char dresult =  dgemm ();
char sresult =  sgemm ();
char zresult =  zgemm ();
]])])
])
m4trace:m4/matex_blas.m4:61: -1- AC_DEFUN([MATEX_C_RUN_BLAS_TEST], [
   AC_LANG_PUSH([C])
   MATEX_C_BLAS_TEST()
   AC_LINK_IFELSE([], [matex_blas_ok=yes], [BLAS_LIBS=])
   AC_LANG_POP([C])
])
m4trace:m4/matex_blas.m4:72: -1- AC_DEFUN([MATEX_F77_RUN_BLAS_TEST], [
   AC_LANG_PUSH([Fortran 77])
   MATEX_F77_BLAS_TEST()
   AC_LINK_IFELSE([], [matex_blas_ok=yes], [BLAS_LIBS=])
   AC_LANG_POP([Fortran 77])
])
m4trace:m4/matex_blas.m4:83: -1- AC_DEFUN([MATEX_RUN_BLAS_TEST], [
AS_IF([test "x$enable_f77" = xno],
   [AC_LANG_PUSH([C])
    MATEX_C_BLAS_TEST()
    AC_LINK_IFELSE([], [matex_blas_ok=yes], [BLAS_LIBS=])
    AC_LANG_POP([C])],
   [AC_LANG_PUSH([Fortran 77])
    MATEX_F77_BLAS_TEST()
    AC_LINK_IFELSE([], [matex_blas_ok=yes], [BLAS_LIBS=])
    AC_LANG_POP([Fortran 77])])
])
m4trace:m4/matex_blas.m4:104: -1- AC_DEFUN([MATEX_BLAS], [AC_REQUIRE([AC_F77_LIBRARY_LDFLAGS])
blas_size=4
blas_size_hack=no
AC_ARG_WITH([blas],
    [AS_HELP_STRING([--with-blas[[=ARG]]],
        [use external BLAS library; attempt to detect sizeof(INTEGER)])],
    [blas_size_hack=yes])
AC_ARG_WITH([blas4],
    [AS_HELP_STRING([--with-blas4[[=ARG]]],
        [use external BLAS library compiled with sizeof(INTEGER)==4])],
    [blas_size=4; with_blas="$with_blas4"])
AC_ARG_WITH([blas8],
    [AS_HELP_STRING([--with-blas8[[=ARG]]],
        [use external BLAS library compiled with sizeof(INTEGER)==8])],
    [blas_size=8; with_blas="$with_blas8"])

matex_blas_ok=no
AS_IF([test "x$with_blas" = xno], [matex_blas_ok=skip])

# Parse --with-blas argument. Clear previous values first.
BLAS_LIBS=
BLAS_LDFLAGS=
BLAS_CPPFLAGS=
MATEX_ARG_PARSE([with_blas], [BLAS_LIBS], [BLAS_LDFLAGS], [BLAS_CPPFLAGS])

# Get fortran linker names of BLAS functions to check for.
AC_F77_FUNC(cgemm)
AC_F77_FUNC(dgemm)
AC_F77_FUNC(sgemm)
AC_F77_FUNC(zgemm)

matex_save_LIBS="$LIBS"
matex_save_LDFLAGS="$LDFLAGS";     LDFLAGS="$BLAS_LDFLAGS $LDFLAGS"
matex_save_CPPFLAGS="$CPPFLAGS";   CPPFLAGS="$BLAS_CPPFLAGS $CPPFLAGS"

AC_MSG_NOTICE([Attempting to locate BLAS library])

# First, check environment/command-line variables.
# If failed, erase BLAS_LIBS but maintain BLAS_LDFLAGS and BLAS_CPPFLAGS.
AS_IF([test $matex_blas_ok = no],
    [AC_MSG_CHECKING([for BLAS with user-supplied flags])
     LIBS="$BLAS_LIBS $LIBS"
     MATEX_RUN_BLAS_TEST()
     LIBS="$matex_save_LIBS"
     AS_IF([test $matex_blas_ok = yes],
        [AS_IF([test $blas_size_hack = yes],
            [AS_CASE(["$BLAS_LIBS $LIBS $LDFLAGS $CPPFLAGS"],
                [*ilp64*],  [blas_size=8],     # Intel MKL
                [*_int64*], [blas_size=8])])]) # AMD ACML
     AC_MSG_RESULT([$matex_blas_ok])])

# AMD Core Math Library (ACML)
AS_IF([test $matex_blas_ok = no],
    [AC_MSG_CHECKING([for BLAS in AMD Core Math Library])
     # add -lacml to BLAS_LIBS if missing from LIBS
     AS_CASE([$LIBS], [*acml*], [], [BLAS_LIBS="-lacml"])
     LIBS="$BLAS_LIBS $LIBS"
     MATEX_RUN_BLAS_TEST()
     LIBS="$matex_save_LIBS"
     AS_IF([test "x$matex_blas_ok" = xyes],
        [AS_IF([test $blas_size_hack = yes],
            [AS_CASE(["$BLAS_LIBS $LIBS $LDFLAGS $CPPFLAGS"],
                [*_int64*], [blas_size=8])])])
     AC_MSG_RESULT([$matex_blas_ok])])

# Intel MKL library
AS_IF([test $matex_blas_ok = no],
    [AC_MSG_CHECKING([for BLAS in Intel Math Kernel Library])
     # add -lmkl to BLAS_LIBS if missing from LIBS
     AS_CASE([$LIBS], [*mkl*], [], [BLAS_LIBS="-lmkl"])
     LIBS="$BLAS_LIBS $LIBS"
     MATEX_RUN_BLAS_TEST()
     LIBS="$matex_save_LIBS"
     AS_IF([test "x$matex_blas_ok" = xyes],
        [AS_IF([test $blas_size_hack = yes],
            [AS_CASE(["$BLAS_LIBS $LIBS $LDFLAGS $CPPFLAGS"],
                [*ilp64*], [blas_size=8])])])
     AC_MSG_RESULT([$matex_blas_ok])])

# ATLAS library (http://math-atlas.sourceforge.net/)
AS_IF([test $matex_blas_ok = no],
    [AC_MSG_CHECKING([for BLAS in ATLAS])
     AS_IF([test "x$enable_f77" = xno],
        [# add -lcblas if needed but missing from LIBS
         AS_CASE([$LIBS], [*cblas*], [], [BLAS_LIBS="-lcblas"])],
        [# add -lf77blas if needed but missing from LIBS
         AS_CASE([$LIBS], [*f77blas*], [], [BLAS_LIBS="-lf77blas"])])
     # add -latlas if needed but missing from LIBS
     AS_CASE([$LIBS], [*atlas*], [], [BLAS_LIBS="$BLAS_LIBS -latlas"])
     LIBS="$BLAS_LIBS $LIBS"
     MATEX_RUN_BLAS_TEST()
     LIBS="$matex_save_LIBS"
     AC_MSG_RESULT([$matex_blas_ok])])

# PhiPACK libraries (requires generic BLAS lib, too)
AS_IF([test $matex_blas_ok = no],
    [AC_MSG_CHECKING([for BLAS in PhiPACK libraries])
     # add -lblas to BLAS_LIBS if missing from LIBS
     AS_CASE([$LIBS], [*blas*], [], [BLAS_LIBS="-lblas"])
     # add -ldgemm to BLAS_LIBS if missing from LIBS
     AS_CASE([$LIBS], [*dgemm*], [], [BLAS_LIBS="-ldgemm $BLAS_LIBS"])
     # add -lsgemm to BLAS_LIBS if missing from LIBS
     AS_CASE([$LIBS], [*sgemm*], [], [BLAS_LIBS="-lsgemm $BLAS_LIBS"])
     LIBS="$BLAS_LIBS $LIBS"
     MATEX_RUN_BLAS_TEST()
     LIBS="$matex_save_LIBS"
     AC_MSG_RESULT([$matex_blas_ok])])

# Apple Accelerate.framework
AS_IF([test $matex_blas_ok = no],
    [AC_MSG_CHECKING([for BLAS in Apple Accelerate.framework])
     # add -framework Accelerate to BLAS_LIBS if missing from LIBS
     AS_CASE([$LIBS], [*Accelerate*], [], [BLAS_LIBS="-framework Accelerate"])
     LIBS="$BLAS_LIBS $LIBS"
     MATEX_RUN_BLAS_TEST()
     LIBS="$matex_save_LIBS"
     AC_MSG_RESULT([$matex_blas_ok])])

# Apple vecLib.framework
AS_IF([test $matex_blas_ok = no],
    [AC_MSG_CHECKING([for BLAS in Apple vecLib.framework])
     # add -framework vecLib to BLAS_LIBS if missing from LIBS
     AS_CASE([$LIBS], [*vecLib*], [], [BLAS_LIBS="-framework vecLib"])
     LIBS="$BLAS_LIBS $LIBS"
     MATEX_RUN_BLAS_TEST()
     LIBS="$matex_save_LIBS"
     AC_MSG_RESULT([$matex_blas_ok])])

# Alpha CXML library (CXML stands for Compaq Extended Math Library)
AS_IF([test $matex_blas_ok = no],
    [AC_MSG_CHECKING([for BLAS in Alpha CXML library])
     # add -lcxml to BLAS_LIBS if missing from LIBS
     AS_CASE([$LIBS], [*cxml*], [], [BLAS_LIBS="-lcxml"])
     LIBS="$BLAS_LIBS $LIBS"
     MATEX_RUN_BLAS_TEST()
     LIBS="$matex_save_LIBS"
     AS_IF([test $matex_blas_ok = no],
        [# add -lcxml to BLAS_LIBS if missing from LIBS
         AS_CASE([$LIBS], [*cxml*], [], [BLAS_LIBS="-lcxml"])
         # add -lcpml to BLAS_LIBS if missing from LIBS
         AS_CASE([$LIBS], [*cpml*], [], [BLAS_LIBS="$BLAS_LIBS -lcpml"])
         LIBS="$BLAS_LIBS $LIBS"
         MATEX_RUN_BLAS_TEST()
         LIBS="$matex_save_LIBS"])
     AC_MSG_RESULT([$matex_blas_ok])])

# Alpha DXML library (now called CXML, see above)

# Sun Performance library
AS_IF([test $matex_blas_ok = no],
    [AC_MSG_CHECKING([for BLAS in Sun Performance Library])
     # add -xlic_lib=sunperf to BLAS_LIBS if missing from LIBS
     AS_CASE([$LIBS], [*sunperf*], [], [BLAS_LIBS="-xlic_lib=sunperf"])
     LIBS="$BLAS_LIBS $LIBS"
     MATEX_RUN_BLAS_TEST()
     LIBS="$matex_save_LIBS"
     AS_IF([test $matex_blas_ok = no],
        [# add -xlic_lib=sunperf to BLAS_LIBS if missing from LIBS
         AS_CASE([$LIBS], [*sunperf*], [], [BLAS_LIBS="-xlic_lib=sunperf"])
         # add -lsunmath to BLAS_LIBS if missing from LIBS
         AS_CASE([$LIBS], [*sunmath*], [], [BLAS_LIBS="$BLAS_LIBS -lsunmath"])
         LIBS="$BLAS_LIBS $LIBS"
         MATEX_RUN_BLAS_TEST()
         LIBS="$matex_save_LIBS"])
     AC_MSG_RESULT([$matex_blas_ok])])

# SCSL library (SCSL stands for SGI/Cray Scientific Library)
AS_IF([test $matex_blas_ok = no],
    [AC_MSG_CHECKING([for BLAS in SGI/Cray Scientific Library])
     # add -lscs to BLAS_LIBS if missing from LIBS
     AS_CASE([$LIBS], [*scs*], [], [BLAS_LIBS="-lscs"])
     LIBS="$BLAS_LIBS $LIBS"
     MATEX_RUN_BLAS_TEST()
     LIBS="$matex_save_LIBS"
     AC_MSG_RESULT([$matex_blas_ok])])

# SGIMATH library
AS_IF([test $matex_blas_ok = no],
    [AC_MSG_CHECKING([for BLAS in SGIMATH library])
     # add -lcomplib.sgimath to BLAS_LIBS if missing from LIBS
     AS_CASE([$LIBS], [*complib.sgimath*], [], [BLAS_LIBS="-lcomplib.sgimath"])
     LIBS="$BLAS_LIBS $LIBS"
     MATEX_RUN_BLAS_TEST()
     LIBS="$matex_save_LIBS"
     AC_MSG_RESULT([$matex_blas_ok])])

# IBM ESSL library (requires generic BLAS lib, too)
AS_IF([test $matex_blas_ok = no],
    [AC_MSG_CHECKING([for BLAS in IBM ESSL library])
     # add -lessl to BLAS_LIBS if missing from LIBS
     AS_CASE([$LIBS], [*essl*], [], [BLAS_LIBS="-lessl"])
     # add -lblas to BLAS_LIBS if missing from LIBS
     AS_CASE([$LIBS], [*blas*], [], [BLAS_LIBS="$BLAS_LIBS -lblas"])
     LIBS="$BLAS_LIBS $LIBS"
     MATEX_RUN_BLAS_TEST()
     LIBS="$matex_save_LIBS"
     AC_MSG_RESULT([$matex_blas_ok])])

# Generic BLAS library
AS_IF([test $matex_blas_ok = no],
    [AC_MSG_CHECKING([for BLAS in generic library])
     BLAS_LIBS="-lblas"
     LIBS="$BLAS_LIBS $LIBS"
     MATEX_RUN_BLAS_TEST()
     LIBS="$matex_save_LIBS"
     AC_MSG_RESULT([$matex_blas_ok])])

CPPFLAGS="$matex_save_CPPFLAGS"
LDFLAGS="$matex_save_LDFLAGS"

AC_SUBST([BLAS_LIBS])
AC_SUBST([BLAS_LDFLAGS])
AC_SUBST([BLAS_CPPFLAGS])

# Tests are complete. Execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
AS_IF([test $matex_blas_ok = yes],
    [have_blas=1
     $1],
    [AC_MSG_WARN([BLAS library not found, using internal BLAS])
     blas_size=$matex_cv_f77_integer_size # reset blas integer size to desired
     have_blas=0
     $2])
AC_DEFINE_UNQUOTED([HAVE_BLAS], [$have_blas],
    [Define to 1 if using external BLAS library])
AC_DEFINE_UNQUOTED([BLAS_SIZE], [$blas_size],
    [Define to sizeof(INTEGER) used to compile BLAS])
AM_CONDITIONAL([HAVE_BLAS], [test $matex_blas_ok = yes])
])
m4trace:m4/matex_lapack.m4:4: -1- AC_DEFUN([MATEX_F77_LAPACK_TEST], [AC_LANG_CONFTEST([AC_LANG_PROGRAM([],
[[      implicit none
      external DGETRS
      CALL DGETRS ()]])])
])
m4trace:m4/matex_lapack.m4:14: -1- AC_DEFUN([MATEX_C_LAPACK_TEST], [AC_LANG_CONFTEST([AC_LANG_PROGRAM(
[#ifdef __cplusplus
extern "C" {
#endif
char dgetrs ();
#ifdef __cplusplus
}
#endif
],
[[char result = dgetrs ();
]])])
])
m4trace:m4/matex_lapack.m4:31: -1- AC_DEFUN([MATEX_LAPACK], [AC_REQUIRE([MATEX_BLAS])
AC_ARG_WITH([lapack],
    [AS_HELP_STRING([--with-lapack=[[ARG]]], [use external LAPACK library])])

matex_lapack_ok=no
AS_IF([test "x$with_lapack" = xno], [matex_lapack_ok=skip])

# Parse --with-lapack argument. Clear previous values first.
LAPACK_LIBS=
LAPACK_LDFLAGS=
LAPACK_CPPFLAGS=
MATEX_ARG_PARSE([with_lapack], [LAPACK_LIBS], [LAPACK_LDFLAGS], [LAPACK_CPPFLAGS])

# Get fortran linker name of LAPACK function to check for.
AC_F77_FUNC(dgetrs)

matex_save_LIBS="$LIBS"
matex_save_LDFLAGS="$LDFLAGS"
matex_save_CPPFLAGS="$CPPFLAGS"

LDFLAGS="$LAPACK_LDFLAGS $BLAS_LDFLAGS $LDFLAGS"
CPPFLAGS="$LAPACK_CPPFLAGS $BLAS_CPPFLAGS $CPPFLAGS"

AC_MSG_NOTICE([Attempting to locate LAPACK library])

# We cannot use LAPACK if BLAS is not found
AS_IF([test $matex_blas_ok != yes], [matex_lapack_ok=noblas])

# First, check environment/command-line variables.
# If failed, erase LAPACK_LIBS but maintain LAPACK_LDFLAGS and LAPACK_CPPFLAGS.
AS_IF([test $matex_lapack_ok = no],
    [LIBS="$LAPACK_LIBS $BLAS_LIBS $LIBS"
     AS_IF([test "x$enable_f77" = xno],
        [AC_MSG_CHECKING([for C LAPACK with user-supplied flags])
         AC_LANG_PUSH([C])
         MATEX_C_LAPACK_TEST()
         AC_LINK_IFELSE([], [matex_lapack_ok=yes], [LAPACK_LIBS=])
         AC_LANG_POP([C])],
        [AC_MSG_CHECKING([for Fortran 77 LAPACK with user-supplied flags])
         AC_LANG_PUSH([Fortran 77])
         MATEX_F77_LAPACK_TEST()
         AC_LINK_IFELSE([], [matex_lapack_ok=yes], [LAPACK_LIBS=])
         AC_LANG_POP([Fortran 77])])
     AC_MSG_RESULT([$matex_lapack_ok])
     LIBS="$matex_save_LIBS"])

# Generic LAPACK library?
for lib in lapack lapack_rs6k; do
AS_IF([test $matex_lapack_ok = no],
    [matex_save_LIBS="$LIBS"; LIBS="$BLAS_LIBS $LIBS"
     AC_CHECK_LIB([$lib], [$dgetrs],
        [matex_lapack_ok=yes; LAPACK_LIBS="-l$lib"], [], [$FLIBS])
     LIBS="$matex_save_LIBS"])
done

CPPFLAGS="$matex_save_CPPFLAGS"
LDFLAGS="$matex_save_LDFLAGS"

AC_SUBST([LAPACK_LIBS])
AC_SUBST([LAPACK_LDFLAGS])
AC_SUBST([LAPACK_CPPFLAGS])

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
AS_IF([test $matex_lapack_ok = yes],
    [have_lapack=1
     $1],
    [AC_MSG_WARN([LAPACK library not found, using internal LAPACK])
     have_lapack=0
     $2])
AC_DEFINE_UNQUOTED([HAVE_LAPACK], [$have_lapack],
    [Define to 1 if using external LAPACK library])
AM_CONDITIONAL([HAVE_LAPACK], [test $matex_lapack_ok = yes])
])
m4trace:m4/matex_mpi_unwrap.m4:10: -1- AC_DEFUN([MATEX_MPI_UNWRAP], [
# Find perl.
AC_PATH_PROG([PERL], [perl])
# Create inside.pl.
rm -f inside.pl
[cat >inside.pl <<"EOF"
#!/usr/bin/perl
use strict;
use warnings;
my $numargs = @S|@#ARGV + 1;
if ($numargs != 2) {
    print "Usage: wrapped.txt naked.txt\n";
    exit 1;
}
# Read each input file as a string (rather than a list).
local $/=undef;
open WRAPPED, "$ARGV[0]" or die "Could not open wrapped text file: $!";
my $wrapped_lines = <WRAPPED>;
close WRAPPED;
open NAKED, "$ARGV[1]" or die "Could not open naked text file: $!";
my $naked_lines = <NAKED>;
close NAKED;
# Replace newlines, + from wrapped and naked lines.
$wrapped_lines =~ tr/\n+/ /;
$naked_lines =~ tr/\n+/ /;
# Remove whitespace from beginning of wrapped and naked lines.
$wrapped_lines =~ s/^\s+//;
$naked_lines =~ s/^\s+//;
# Remove whitespace from end of wrapped and naked lines.
$wrapped_lines =~ s/\s+$//;
$naked_lines =~ s/\s+$//;
# If either wrapped_lines or naked_lines are empty, this is an error.
# It is assumed that the particular version string which created the input
# files should generate SOMETHING.
unless ($wrapped_lines) {
    exit 1;
}
unless ($naked_lines) {
    exit 1;
}
# Cray compilers append a timestamp into their version string. Remove it.
if ($wrapped_lines =~ /\QCray\E/) {
    $wrapped_lines = substr $wrapped_lines, 0, -28;
    $naked_lines = substr $naked_lines, 0, -28;
}
# Can the naked lines be found within the wrapped lines?
if ($wrapped_lines =~ /\Q$naked_lines\E/) {
    #print "Found as substring\n";
    exit 0;
}
# Are the naked lines exactly the same as the wrapped lines?
elsif ($wrapped_lines eq $naked_lines) {
    #print "Found equal\n";
    exit 0;
}
else {
    #print "Not found\n";
    exit 1;
}
EOF]
inside="$PERL inside.pl"
wrapped="$_AC_CC"
AC_LANG_CASE(
[C], [AS_CASE([$wrapped],
    [*_r],  [compilers="bgxlc_r xlc_r"],
    [*],    [compilers="bgxlc xlc pgcc pathcc icc sxcc fcc opencc suncc craycc gcc ecc cl ccc cc"])
],
[C++], [AS_CASE([$wrapped],
    [*_r],  [compilers="bgxlC_r xlC_r"],
    [*],    [compilers="icpc pgCC pathCC sxc++ xlC bgxlC openCC sunCC crayc++ g++ c++ gpp aCC cxx cc++ cl.exe FCC KCC RCC CC"])
],
[Fortran 77], [AS_CASE([$wrapped],
    [*_r],  [compilers="bgxlf95_r xlf95_r bgxlf90_r xlf90_r bgxlf_r xlf_r"],
    [*],    [compilers="gfortran g95 bgxlf95 xlf95 f95 fort ifort ifc efc pgf95 pathf95 lf95 openf95 sunf95 crayftn bgxlf90 xlf90 f90 pgf90 pathf90 pghpf epcf90 sxf90 openf90 sunf90 g77 bgxlf xlf f77 frt pgf77 pathf77 cf77 fort77 fl32 af77"])
    ],
[Fortran], [
])
AS_VAR_PUSHDEF([matex_save_comp], [matex_save_[]_AC_CC[]])
AS_VAR_PUSHDEF([matex_orig_comp], [matex_orig_[]_AC_CC[]])
AS_VAR_PUSHDEF([matex_cv_mpi_naked], [matex_cv_mpi[]_AC_LANG_ABBREV[]_naked])
AC_CACHE_CHECK([for base $wrapped compiler], [matex_cv_mpi_naked], [
base="`$wrapped -show 2>/dev/null | sed 's/@<:@ 	@:>@.*@S|@//' | head -1`"
matex_save_comp="$_AC_CC"
_AC_CC="$base"
# if -m32 or -m64 is present in the -show params, or separately, add it
unwrapped_args="`$wrapped -show 2>/dev/null`"
extra_arg=""
for arg in $unwrapped_args $wrapped
do
    AS_CASE([$arg],
        [*-m32*],   [extra_arg="-m32"],
        [*-m64*],   [extra_arg="-m64"])
done
AS_IF([test "x$extra_arg" != x], [base="$base $extra_arg"])
AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])], [matex_cv_mpi_naked="$base"])
_AC_CC="$matex_save_comp"
versions="--version -v -V -qversion"
found_wrapped_version=0
# Try separating stdout and stderr. Only compare stdout.
AS_IF([test "x$matex_cv_mpi_naked" = x], [
# prepend any CC/CXX/F77 the user may have specified
compilers="$matex_orig_comp $compilers"
echo "only comparing stdout" >&AS_MESSAGE_LOG_FD
for version in $versions
do
    echo "trying version=$version" >&AS_MESSAGE_LOG_FD
    rm -f mpi.txt mpi.err naked.txt naked.err
    AS_IF([$wrapped $version 1>mpi.txt 2>mpi.err],
        [found_wrapped_version=1
         for naked_compiler in $compilers
         do
            AS_IF([test "x$naked_compiler" != "x$wrapped"],
                [AS_IF([$naked_compiler $version 1>naked.txt 2>naked.err],
                    [AS_IF([$inside mpi.txt naked.txt >/dev/null],
                        [matex_cv_mpi_naked=$naked_compiler; break],
                        [echo "inside.pl $wrapped $naked_compiler failed, skipping" >&AS_MESSAGE_LOG_FD])],
                    [echo "$naked_compiler $version failed, skipping" >&AS_MESSAGE_LOG_FD])])
         done],
        [echo "$wrapped $version failed, skipping" >&AS_MESSAGE_LOG_FD])
    AS_IF([test "x$matex_cv_mpi_naked" != x], [break])
done
])
# Perhaps none of the MPI compilers had a zero exit status (this is bad).
# In this case we have to do a brute force match regardless of exit status.
AS_IF([test "x$found_wrapped_version" = x0], [
AS_IF([test "x$matex_cv_mpi_naked" = x], [
echo "no zero exit status found for MPI compilers" >&AS_MESSAGE_LOG_FD
for version in $versions
do
    echo "trying version=$version" >&AS_MESSAGE_LOG_FD
    rm -f mpi.txt mpi.err
    $wrapped $version 1>mpi.txt 2>mpi.err
    for naked_compiler in $compilers
    do
        AS_IF([test "x$naked_compiler" != "x$wrapped"],
            [rm -f naked.txt naked.err
             AS_IF([$naked_compiler $version 1>naked.txt 2>naked.err],
                [AS_IF([$inside mpi.txt naked.txt >/dev/null],
                    [matex_cv_mpi_naked=$naked_compiler; break],
                    [echo "inside.pl $wrapped $naked_compiler failed, skipping" >&AS_MESSAGE_LOG_FD])],
                [echo "$naked_compiler $version failed, skipping" >&AS_MESSAGE_LOG_FD])])
    done
    AS_IF([test "x$matex_cv_mpi_naked" != x], [break])
done
])
])
# Try by combining stdout/err into one file.
AS_IF([test "x$matex_cv_mpi_naked" = x], [
echo "try combining stdout and stderr into one file" >&AS_MESSAGE_LOG_FD
for version in $versions
do
    echo "trying version=$version" >&AS_MESSAGE_LOG_FD
    rm -f mpi.txt naked.txt
    AS_IF([$wrapped $version 1>mpi.txt 2>&1],
        [for naked_compiler in $compilers
         do
            AS_IF([test "x$naked_compiler" != "x$wrapped"],
                [AS_IF([$naked_compiler $version 1>naked.txt 2>&1],
                    [AS_IF([$inside mpi.txt naked.txt >/dev/null],
                        [matex_cv_mpi_naked=$naked_compiler; break],
                        [echo "inside.pl $wrapped $naked_compiler failed, skipping" >&AS_MESSAGE_LOG_FD])],
                    [echo "$naked_compiler $version failed, skipping" >&AS_MESSAGE_LOG_FD])])
         done],
        [echo "$wrapped $version failed, skipping" >&AS_MESSAGE_LOG_FD])
    AS_IF([test "x$matex_cv_mpi_naked" != x], [break])
done
])
# If we got this far, then it's likely that the MPI compiler had a zero exit
# status when it shouldn't have for one version flag, but later had a non-zero
# exit status for a flag it shouldn't have.  One false positive hid a false
# negative.  In this case, brute force compare all MPI compiler output against
# all compiler output.
AS_IF([test "x$matex_cv_mpi_naked" = x], [
echo "we have a very badly behaving MPI compiler" >&AS_MESSAGE_LOG_FD
for version in $versions
do
    echo "trying version=$version" >&AS_MESSAGE_LOG_FD
    rm -f mpi.txt mpi.err
    $wrapped $version 1>mpi.txt 2>mpi.err
    for naked_compiler in $compilers
    do
        AS_IF([test "x$naked_compiler" != "x$wrapped"],
            [rm -f naked.txt naked.err
             AS_IF([$naked_compiler $version 1>naked.txt 2>naked.err],
                [AS_IF([$inside mpi.txt naked.txt >/dev/null],
                    [matex_cv_mpi_naked=$naked_compiler; break],
                    [echo "inside.pl $wrapped $naked_compiler failed, skipping" >&AS_MESSAGE_LOG_FD])],
                [echo "$naked_compiler $version failed, skipping" >&AS_MESSAGE_LOG_FD])])
    done
    AS_IF([test "x$matex_cv_mpi_naked" != x], [break])
done
])
rm -f mpi.txt mpi.err naked.txt naked.err
])
AS_IF([test "x$matex_cv_mpi_naked" = x],
    [AC_MSG_ERROR([Could not determine the ]_AC_LANG[ compiler wrapped by MPI])],
    [AS_IF([test "x$matex_orig_comp" != x && test "x$matex_orig_comp" != "x$matex_cv_mpi_naked"],
        [AC_MSG_WARN([unwrapped $wrapped ($matex_cv_mpi_naked) does not match user-specified $matex_orig_comp])])])
AS_VAR_POPDEF([matex_save_comp])
AS_VAR_POPDEF([matex_cv_mpi_naked])
rm -f inside.pl
])
m4trace:m4/matex_mpi_unwrap.m4:218: -1- AC_DEFUN([MATEX_MPI_UNWRAP_PUSH], [
matex_mpi_unwrap_push_save_CC="$CC"
matex_mpi_unwrap_push_save_CXX="$CXX"
matex_mpi_unwrap_push_save_F77="$F77"
matex_mpi_unwrap_push_save_FC="$FC"
AS_IF([test "x$matex_cv_mpic_naked"   != x], [ CC="$matex_cv_mpic_naked"])
AS_IF([test "x$matex_cv_mpicxx_naked" != x], [CXX="$matex_cv_mpicxx_naked"])
AS_IF([test "x$matex_cv_mpif77_naked" != x], [F77="$matex_cv_mpif77_naked"])
AS_IF([test "x$matex_cv_mpifc_naked"  != x], [ FC="$matex_cv_mpifc_naked"])
])
m4trace:m4/matex_mpi_unwrap.m4:233: -1- AC_DEFUN([MATEX_MPI_UNWRAP_POP], [
 CC="$matex_mpi_unwrap_push_save_CC"
CXX="$matex_mpi_unwrap_push_save_CXX"
F77="$matex_mpi_unwrap_push_save_F77"
 FC="$matex_mpi_unwrap_push_save_FC"
])
m4trace:m4/matex_mpicc.m4:38: -1- AC_DEFUN([MATEX_PROG_MPICC], [AC_ARG_VAR([MPICC], [MPI C compiler])
# In the case of using MPI wrappers, set CC=MPICC since CC will override
# absolutely everything in our list of compilers.
# Save CC, just in case.
AS_IF([test x$with_mpi_wrappers = xyes],
    [AS_IF([test "x$CC" != "x$MPICC"], [matex_orig_CC="$CC"])
     AS_CASE([x$CC:x$MPICC],
        [x:x],  [],
        [x:x*], [CC="$MPICC"],
        [x*:x],
[AC_MSG_WARN([MPI compilers desired but CC is set while MPICC is unset.])
 AC_MSG_WARN([CC will be ignored during compiler selection, but will be])
 AC_MSG_WARN([tested first during MPI compiler unwrapping. Perhaps you])
 AC_MSG_WARN([meant to set MPICC instead of or in addition to CC?])
 CC=],
        [x*:x*], 
[AS_IF([test "x$CC" != "x$MPICC"],
[AC_MSG_WARN([MPI compilers desired, MPICC and CC are set, and MPICC!=CC.])
 AC_MSG_WARN([Choosing MPICC over CC.])
 AC_MSG_WARN([CC will be tested first during MPI compiler unwrapping.])])
 CC="$MPICC"],
[AC_MSG_ERROR([CC/MPICC case failure])])])
matex_cc="bgxlc_r bgxlc xlc_r xlc pgcc pathcc icc sxcc fcc opencc suncc craycc gcc cc ecc cl ccc"
matex_mpicc="mpicc mpixlc_r mpixlc hcc mpxlc_r mpxlc sxmpicc mpifcc mpgcc mpcc cmpicc cc"
AS_IF([test x$with_mpi_wrappers = xyes],
    [CC_TO_TEST="$matex_mpicc_pref $matex_mpicc"],
    [CC_TO_TEST="$matex_cc_pref $matex_cc"])
AC_PROG_CC([$CC_TO_TEST])
])
m4trace:m4/matex_mpicxx.m4:46: -1- AC_DEFUN([MATEX_PROG_MPICXX], [AC_ARG_VAR([MPICXX], [MPI C++ compiler])
# In the case of using MPI wrappers, set CXX=MPICXX since CXX will override
# absolutely everything in our list of compilers.
AS_IF([test x$with_mpi_wrappers = xyes],
    [AS_IF([test "x$CXX" != "x$MPICXX"], [matex_orig_CXX="$CXX"])
     AS_CASE([x$CXX:x$MPICXX],
        [x:x],  [],
        [x:x*], [CXX="$MPICXX"],
        [x*:x],
[AC_MSG_WARN([MPI compilers desired but CXX is set while MPICXX is unset.])
 AC_MSG_WARN([CXX will be ignored during compiler selection, but will be])
 AC_MSG_WARN([tested first during MPI compiler unwrapping. Perhaps you])
 AC_MSG_WARN([meant to set MPICXX instead of or in addition to CXX?])
 CXX=],
        [x*:x*], 
[AS_IF([test "x$CXX" != "x$MPICXX"],
[AC_MSG_WARN([MPI compilers desired, MPICXX and CXX are set, and MPICXX!=CXX.])
 AC_MSG_WARN([Choosing MPICXX over CXX.])
 AC_MSG_WARN([CXX will be tested first during MPI compiler unwrapping.])])
 CXX="$MPICXX"],
[AC_MSG_ERROR([CXX/MPICXX case failure])])])
matex_cxx="icpc pgCC pathCC sxc++ xlC_r xlC bgxlC_r bgxlC openCC sunCC crayCC g++ c++ gpp aCC CC cxx cc++ cl.exe FCC KCC RCC"
matex_mpicxx="mpic++ mpicxx mpiCC sxmpic++ hcp mpxlC_r mpxlC mpixlcxx_r mpixlcxx mpg++ mpc++ mpCC cmpic++ mpiFCC CC"
AS_IF([test x$with_mpi_wrappers = xyes],
    [CXX_TO_TEST="$matex_mpicxx_pref $matex_mpicxx"],
    [CXX_TO_TEST="$matex_cxx_pref $matex_cxx"])
AC_PROG_CXX([$CXX_TO_TEST])
])
m4trace:m4/matex_mpif77.m4:80: -1- AC_DEFUN([MATEX_PROG_MPIF77], [AC_ARG_VAR([MPIF77], [MPI Fortran 77 compiler])
# If FC is set, override F77.  Similarly for MPIFC/MPIF77 and FCFLAGS/FFLAGS.
AS_IF([test "x$FC" != x],       [F77="$FC"])
AS_IF([test "x$MPIFC" != x],    [MPIF77="$MPIFC"])
AS_IF([test "x$FCFLAGS" != x],  [FFLAGS="$FCFLAGS"])
# In the case of using MPI wrappers, set F77=MPIF77 since F77 will override
# absolutely everything in our list of compilers.
# Save F77, just in case.
AS_IF([test x$with_mpi_wrappers = xyes],
    [AS_IF([test "x$F77" != "x$MPIF77"], [matex_orig_F77="$F77"])
     AS_CASE([x$F77:x$MPIF77],
        [x:x],  [],
        [x:x*], [F77="$MPIF77"],
        [x*:x],
[AC_MSG_WARN([MPI compilers desired but F77 is set while MPIF77 is unset.])
 AC_MSG_WARN([F77 will be ignored during compiler selection, but will be])
 AC_MSG_WARN([tested first during MPI compiler unwrapping. Perhaps you])
 AC_MSG_WARN([meant to set MPIF77 instead of or in addition to F77?])
 F77=],
        [x*:x*], 
[AS_IF([test "x$F77" != "x$MPIF77"],
[AC_MSG_WARN([MPI compilers desired, MPIF77 and F77 are set, and MPIF77!=F77.])
 AC_MSG_WARN([Choosing MPIF77 over F77.])
 AC_MSG_WARN([F77 will be tested first during MPI compiler unwrapping.])])
 F77="$MPIF77"],
[AC_MSG_ERROR([F77/MPIF77 case failure])])])
matex_mpif95="mpif95 mpxlf95_r mpxlf95 ftn"
matex_mpif90="mpif90 mpxlf90_r mpxlf90 mpf90 cmpif90c sxmpif90"
matex_mpif77="mpif77 hf77 mpxlf_r mpxlf mpifrt mpf77 cmpifc"
matex_f95="xlf95 pgf95 pathf95 ifort g95 f95 fort ifc efc openf95 sunf95 crayftn gfortran lf95 ftn"
matex_f90="xlf90 f90 pgf90 pghpf pathf90 epcf90 sxf90 openf90 sunf90"
matex_f77="xlf f77 frt pgf77 pathf77 g77 cf77 fort77 fl32 af77"
AS_IF([test x$with_mpi_wrappers = xyes],
    [F77_TO_TEST="$matex_mpif77_pref $matex_mpif95 $matex_mpif90 $matex_mpif77"],
    [F77_TO_TEST="$matex_f77_pref $matex_f95 $matex_f90 $matex_f77"])
AC_PROG_F77([$F77_TO_TEST])
])
m4trace:m4/matex_with_mpi.m4:6: -1- AC_DEFUN([MATEX_WITH_MPI], [
# MPI_* vars might exist in environment, but they are really internal.
# Reset them.
MPI_LIBS=
MPI_LDFLAGS=
MPI_CPPFLAGS=
# First of all, which messaging library do we want?
AC_ARG_WITH([mpi],
    [AS_HELP_STRING([--with-mpi[[=ARG]]],
        [leave ARG blank to search for MPI compiler wrappers in PATH])],
    [],
    [with_mpi=yes])
with_mpi_wrappers=no
need_parse=no
AS_CASE([$with_mpi],
[yes], [with_mpi_wrappers=yes],
[no],  [AC_MSG_ERROR([MPI is required])],
[*],   [need_parse=yes])
AS_IF([test x$need_parse = xyes],
    [MATEX_ARG_PARSE([with_mpi], [MPI_LIBS], [MPI_LDFLAGS], [MPI_CPPFLAGS])])
AC_SUBST([MPI_LIBS])
AC_SUBST([MPI_LDFLAGS])
AC_SUBST([MPI_CPPFLAGS])
])
m4trace:configure.ac:7: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:7: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:7: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:7: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:7: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:7: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:7: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:7: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:18: -1- AM_INIT_AUTOMAKE([1.11 foreign silent-rules subdir-objects tar-ustar])
m4trace:configure.ac:18: -1- m4_pattern_allow([^AM_[A-Z]+FLAGS$])
m4trace:configure.ac:18: -1- AM_SET_CURRENT_AUTOMAKE_VERSION
m4trace:configure.ac:18: -1- AM_AUTOMAKE_VERSION([1.11.3])
m4trace:configure.ac:18: -1- _AM_AUTOCONF_VERSION([2.69])
m4trace:configure.ac:18: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^am__isrc$])
m4trace:configure.ac:18: -1- _AM_SUBST_NOTMAKE([am__isrc])
m4trace:configure.ac:18: -1- m4_pattern_allow([^CYGPATH_W$])
m4trace:configure.ac:18: -1- _AM_SET_OPTIONS([1.11 foreign silent-rules subdir-objects tar-ustar])
m4trace:configure.ac:18: -1- _AM_SET_OPTION([1.11])
m4trace:configure.ac:18: -2- _AM_MANGLE_OPTION([1.11])
m4trace:configure.ac:18: -1- _AM_SET_OPTION([foreign])
m4trace:configure.ac:18: -2- _AM_MANGLE_OPTION([foreign])
m4trace:configure.ac:18: -1- _AM_SET_OPTION([silent-rules])
m4trace:configure.ac:18: -2- _AM_MANGLE_OPTION([silent-rules])
m4trace:configure.ac:18: -1- _AM_SET_OPTION([subdir-objects])
m4trace:configure.ac:18: -2- _AM_MANGLE_OPTION([subdir-objects])
m4trace:configure.ac:18: -1- _AM_SET_OPTION([tar-ustar])
m4trace:configure.ac:18: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:18: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:18: -1- _AM_IF_OPTION([no-define], [], [AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE", [Name of package])
 AC_DEFINE_UNQUOTED(VERSION, "$VERSION", [Version number of package])])
m4trace:configure.ac:18: -2- _AM_MANGLE_OPTION([no-define])
m4trace:configure.ac:18: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:18: -1- AM_SANITY_CHECK
m4trace:configure.ac:18: -1- AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
m4trace:configure.ac:18: -1- AM_MISSING_HAS_RUN
m4trace:configure.ac:18: -1- AM_AUX_DIR_EXPAND
m4trace:configure.ac:18: -1- m4_pattern_allow([^ACLOCAL$])
m4trace:configure.ac:18: -1- AM_MISSING_PROG([AUTOCONF], [autoconf])
m4trace:configure.ac:18: -1- m4_pattern_allow([^AUTOCONF$])
m4trace:configure.ac:18: -1- AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
m4trace:configure.ac:18: -1- m4_pattern_allow([^AUTOMAKE$])
m4trace:configure.ac:18: -1- AM_MISSING_PROG([AUTOHEADER], [autoheader])
m4trace:configure.ac:18: -1- m4_pattern_allow([^AUTOHEADER$])
m4trace:configure.ac:18: -1- AM_MISSING_PROG([MAKEINFO], [makeinfo])
m4trace:configure.ac:18: -1- m4_pattern_allow([^MAKEINFO$])
m4trace:configure.ac:18: -1- AM_PROG_INSTALL_SH
m4trace:configure.ac:18: -1- m4_pattern_allow([^install_sh$])
m4trace:configure.ac:18: -1- AM_PROG_INSTALL_STRIP
m4trace:configure.ac:18: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^INSTALL_STRIP_PROGRAM$])
m4trace:configure.ac:18: -1- AM_PROG_MKDIR_P
m4trace:configure.ac:18: -1- m4_pattern_allow([^MKDIR_P$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^mkdir_p$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:18: -1- AM_SET_LEADING_DOT
m4trace:configure.ac:18: -1- m4_pattern_allow([^am__leading_dot$])
m4trace:configure.ac:18: -1- _AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])], [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
m4trace:configure.ac:18: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:18: -1- _AM_PROG_TAR([ustar])
m4trace:configure.ac:18: -1- m4_pattern_allow([^AMTAR$])
m4trace:configure.ac:18: -1- AM_RUN_LOG([$_am_tar --version])
m4trace:configure.ac:18: -1- AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
m4trace:configure.ac:18: -1- AM_RUN_LOG([$am__untar <conftest.tar])
m4trace:configure.ac:18: -1- m4_pattern_allow([^am__tar$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^am__untar$])
m4trace:configure.ac:18: -1- _AM_IF_OPTION([no-dependencies], [], [AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES(CC)],
		  [define([AC_PROG_CC],
			  defn([AC_PROG_CC])[_AM_DEPENDENCIES(CC)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES(CXX)],
		  [define([AC_PROG_CXX],
			  defn([AC_PROG_CXX])[_AM_DEPENDENCIES(CXX)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES(OBJC)],
		  [define([AC_PROG_OBJC],
			  defn([AC_PROG_OBJC])[_AM_DEPENDENCIES(OBJC)])])dnl
])
m4trace:configure.ac:18: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:18: -1- _AM_IF_OPTION([silent-rules], [AC_REQUIRE([AM_SILENT_RULES])])
m4trace:configure.ac:18: -2- _AM_MANGLE_OPTION([silent-rules])
m4trace:configure.ac:18: -1- AM_SILENT_RULES
m4trace:configure.ac:18: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:18: -1- AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:18: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:18: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:18: -1- AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:18: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:18: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:18: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:30: -1- MATEX_WITH_MPI
m4trace:configure.ac:30: -1- MATEX_ARG_PARSE([with_mpi], [MPI_LIBS], [MPI_LDFLAGS], [MPI_CPPFLAGS])
m4trace:configure.ac:30: -1- m4_pattern_allow([^MPI_LIBS$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^MPI_LDFLAGS$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^MPI_CPPFLAGS$])
m4trace:configure.ac:40: -1- MATEX_PROG_MPICXX
m4trace:configure.ac:40: -1- m4_pattern_allow([^MPICXX$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^CXXFLAGS$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^ac_ct_CXX$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:40: -1- _AM_DEPENDENCIES([CXX])
m4trace:configure.ac:40: -1- AM_SET_DEPDIR
m4trace:configure.ac:40: -1- m4_pattern_allow([^DEPDIR$])
m4trace:configure.ac:40: -1- AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:40: -1- AM_MAKE_INCLUDE
m4trace:configure.ac:40: -1- m4_pattern_allow([^am__include$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^am__quote$])
m4trace:configure.ac:40: -1- AM_DEP_TRACK
m4trace:configure.ac:40: -1- AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
m4trace:configure.ac:40: -1- m4_pattern_allow([^AMDEP_TRUE$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^AMDEP_FALSE$])
m4trace:configure.ac:40: -1- _AM_SUBST_NOTMAKE([AMDEP_TRUE])
m4trace:configure.ac:40: -1- _AM_SUBST_NOTMAKE([AMDEP_FALSE])
m4trace:configure.ac:40: -1- m4_pattern_allow([^AMDEPBACKSLASH$])
m4trace:configure.ac:40: -1- _AM_SUBST_NOTMAKE([AMDEPBACKSLASH])
m4trace:configure.ac:40: -1- m4_pattern_allow([^am__nodep$])
m4trace:configure.ac:40: -1- _AM_SUBST_NOTMAKE([am__nodep])
m4trace:configure.ac:40: -1- m4_pattern_allow([^CXXDEPMODE$])
m4trace:configure.ac:40: -1- AM_CONDITIONAL([am__fastdepCXX], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CXX_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:40: -1- m4_pattern_allow([^am__fastdepCXX_TRUE$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^am__fastdepCXX_FALSE$])
m4trace:configure.ac:40: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_TRUE])
m4trace:configure.ac:40: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_FALSE])
m4trace:configure.ac:41: -1- MATEX_MPI_UNWRAP
m4trace:configure.ac:41: -1- m4_pattern_allow([^PERL$])
m4trace:configure.ac:44: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:44: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:44: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:44: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:44: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:44: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:44: -1- m4_pattern_allow([^HAVE_FENV_H$])
m4trace:configure.ac:45: -1- m4_pattern_allow([^HAVE_STDLIB_H$])
m4trace:configure.ac:46: -1- m4_pattern_allow([^HAVE_STRING_H$])
m4trace:configure.ac:47: -1- m4_pattern_allow([^HAVE_SYS_TIME_H$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^HAVE_UNISTD_H$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^const$])
m4trace:configure.ac:53: -1- m4_pattern_allow([^restrict$])
m4trace:configure.ac:53: -1- m4_pattern_allow([^restrict$])
m4trace:configure.ac:54: -1- m4_pattern_allow([^volatile$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^int64_t$])
m4trace:configure.ac:56: -1- m4_pattern_allow([^size_t$])
m4trace:configure.ac:59: -1- m4_pattern_allow([^HAVE_ATEXIT$])
m4trace:configure.ac:60: -1- m4_pattern_allow([^HAVE_MEMSET$])
m4trace:configure.ac:61: -1- m4_pattern_allow([^HAVE_STRTOL$])
m4trace:configure.ac:79: -1- MATEX_PROG_MPICC
m4trace:configure.ac:79: -1- m4_pattern_allow([^MPICC$])
m4trace:configure.ac:79: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:79: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:79: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:79: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:79: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:79: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:79: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:79: -1- _AM_DEPENDENCIES([CC])
m4trace:configure.ac:79: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:configure.ac:79: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:79: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:79: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:79: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:79: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:80: -1- MATEX_MPI_UNWRAP
m4trace:configure.ac:80: -1- m4_pattern_allow([^PERL$])
m4trace:configure.ac:92: -1- MATEX_PROG_MPIF77
m4trace:configure.ac:92: -1- m4_pattern_allow([^MPIF77$])
m4trace:configure.ac:92: -1- m4_pattern_allow([^F77$])
m4trace:configure.ac:92: -1- m4_pattern_allow([^FFLAGS$])
m4trace:configure.ac:92: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:92: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:92: -1- m4_pattern_allow([^F77$])
m4trace:configure.ac:92: -1- m4_pattern_allow([^ac_ct_F77$])
m4trace:configure.ac:93: -1- MATEX_MPI_UNWRAP
m4trace:configure.ac:93: -1- m4_pattern_allow([^PERL$])
m4trace:configure.ac:95: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:95: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:95: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:95: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:95: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:95: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:95: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:95: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:95: -1- m4_pattern_allow([^FLIBS$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^F77_DUMMY_MAIN$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^FC_DUMMY_MAIN_EQ_F77$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^F77_FUNC$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^F77_FUNC_$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^F77_FUNC$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^F77_FUNC_$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^F77_FUNC$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^F77_FUNC_$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^F77_FUNC$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^F77_FUNC_$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^F77_FUNC$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^F77_FUNC_$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^F77_FUNC$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^F77_FUNC_$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^F77_FUNC$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^F77_FUNC_$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^F77_FUNC$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^F77_FUNC_$])
m4trace:configure.ac:109: -1- MATEX_BLAS
m4trace:configure.ac:109: -1- MATEX_ARG_PARSE([with_blas], [BLAS_LIBS], [BLAS_LDFLAGS], [BLAS_CPPFLAGS])
m4trace:configure.ac:109: -1- MATEX_RUN_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_C_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_F77_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_RUN_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_C_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_F77_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_RUN_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_C_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_F77_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_RUN_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_C_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_F77_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_RUN_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_C_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_F77_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_RUN_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_C_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_F77_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_RUN_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_C_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_F77_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_RUN_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_C_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_F77_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_RUN_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_C_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_F77_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_RUN_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_C_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_F77_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_RUN_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_C_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_F77_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_RUN_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_C_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_F77_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_RUN_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_C_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_F77_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_RUN_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_C_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_F77_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_RUN_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_C_BLAS_TEST([])
m4trace:configure.ac:109: -1- MATEX_F77_BLAS_TEST([])
m4trace:configure.ac:109: -1- m4_pattern_allow([^BLAS_LIBS$])
m4trace:configure.ac:109: -1- m4_pattern_allow([^BLAS_LDFLAGS$])
m4trace:configure.ac:109: -1- m4_pattern_allow([^BLAS_CPPFLAGS$])
m4trace:configure.ac:109: -1- m4_pattern_allow([^HAVE_BLAS$])
m4trace:configure.ac:109: -1- m4_pattern_allow([^BLAS_SIZE$])
m4trace:configure.ac:109: -1- AM_CONDITIONAL([HAVE_BLAS], [test $matex_blas_ok = yes])
m4trace:configure.ac:109: -1- m4_pattern_allow([^HAVE_BLAS_TRUE$])
m4trace:configure.ac:109: -1- m4_pattern_allow([^HAVE_BLAS_FALSE$])
m4trace:configure.ac:109: -1- _AM_SUBST_NOTMAKE([HAVE_BLAS_TRUE])
m4trace:configure.ac:109: -1- _AM_SUBST_NOTMAKE([HAVE_BLAS_FALSE])
m4trace:configure.ac:110: -1- MATEX_LAPACK
m4trace:configure.ac:110: -1- MATEX_ARG_PARSE([with_lapack], [LAPACK_LIBS], [LAPACK_LDFLAGS], [LAPACK_CPPFLAGS])
m4trace:configure.ac:110: -1- MATEX_C_LAPACK_TEST([])
m4trace:configure.ac:110: -1- MATEX_F77_LAPACK_TEST([])
m4trace:configure.ac:110: -1- m4_pattern_allow([^LAPACK_LIBS$])
m4trace:configure.ac:110: -1- m4_pattern_allow([^LAPACK_LDFLAGS$])
m4trace:configure.ac:110: -1- m4_pattern_allow([^LAPACK_CPPFLAGS$])
m4trace:configure.ac:110: -1- m4_pattern_allow([^HAVE_LAPACK$])
m4trace:configure.ac:110: -1- AM_CONDITIONAL([HAVE_LAPACK], [test $matex_lapack_ok = yes])
m4trace:configure.ac:110: -1- m4_pattern_allow([^HAVE_LAPACK_TRUE$])
m4trace:configure.ac:110: -1- m4_pattern_allow([^HAVE_LAPACK_FALSE$])
m4trace:configure.ac:110: -1- _AM_SUBST_NOTMAKE([HAVE_LAPACK_TRUE])
m4trace:configure.ac:110: -1- _AM_SUBST_NOTMAKE([HAVE_LAPACK_FALSE])
m4trace:configure.ac:115: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:122: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:122: -1- m4_pattern_allow([^LTLIBOBJS$])
m4trace:configure.ac:122: -1- AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])
m4trace:configure.ac:122: -1- m4_pattern_allow([^am__EXEEXT_TRUE$])
m4trace:configure.ac:122: -1- m4_pattern_allow([^am__EXEEXT_FALSE$])
m4trace:configure.ac:122: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_TRUE])
m4trace:configure.ac:122: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_FALSE])
m4trace:configure.ac:122: -1- _AC_AM_CONFIG_HEADER_HOOK(["$ac_file"])
m4trace:configure.ac:122: -1- _AM_OUTPUT_DEPENDENCY_COMMANDS
